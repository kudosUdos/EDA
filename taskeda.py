# -*- coding: utf-8 -*-
"""TaskEDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-tbgYIIlzp7wPy2FjCuxkACnW26T1JjN

# Exploratory Data Analysis (EDA)

Car Sales

# Author : Chetna Sharma

TASK : <br>
 ● Ask meaningful questions about the dataset before analysis. <br>
 ● Explore the data structure, including variables and data types.<br>
 ● Identify trends, patterns and anomalies within the data. <br>
 ● Test hypotheses and validate assumptions using statistics and visualization.<br> ● Detect potential data issues or problems to address in further analysis.
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("car_sales_data.csv")

"""Dataset Overview"""

print("Shape of dataset:", df.shape)
print("\nColumn names:", df.columns.tolist())

"""Unique values in each column"""

for col in df.columns:
    print(f"{col}: {df[col].nunique()} unique values")

"""Check data types"""

print("\nData types:")
print(df.dtypes)

"""Check missing values percentage"""

missing = df.isnull().mean() * 100
print("\nMissing values (%):")
print(missing)

"""Numerical summary"""

print(df.describe())

"""Categorical summary"""

print(df.describe(include="object"))

"""Most expensive car"""

print("\nMost expensive car:\n", df.loc[df["Price"].idxmax()])

"""Least expensive car"""

print("\nLeast expensive car:\n", df.loc[df["Price"].idxmin()])

"""Basic Exploration"""

print(df.info())
print(df.describe(include="all"))
print(df.isnull().sum())

"""Price distribution"""

plt.figure(figsize=(8,5))
sns.histplot(df["Price"], bins=30, kde=True)
plt.title("Distribution of Car Prices")
plt.show()

"""Mileage distribution"""

plt.figure(figsize=(8,5))
sns.histplot(df["Mileage"], bins=30, kde=True, color="orange")
plt.title("Distribution of Car Mileage")
plt.show()

"""Count of cars by Fuel type"""

sns.countplot(x="Fuel type", data=df, palette="Set2")
plt.title("Cars by Fuel Type")
plt.show()

"""Mileage vs Price"""

plt.figure(figsize=(8,6))
sns.scatterplot(x="Mileage", y="Price", hue="Manufacturer", data=df)
plt.title("Mileage vs Price by Manufacturer")
plt.show()

"""Engine size vs Price"""

plt.figure(figsize=(8,6))
sns.scatterplot(x="Engine size", y="Price", hue="Fuel type", data=df)
plt.title("Engine Size vs Price by Fuel Type")
plt.show()

"""Price by Fuel type"""

plt.figure(figsize=(8,6))
sns.boxplot(x="Fuel type", y="Price", data=df)
plt.title("Price distribution by Fuel Type")
plt.show()

"""Correlation heatmap"""

plt.figure(figsize=(8,6))
sns.heatmap(df.corr(numeric_only=True), annot=True, cmap="coolwarm", fmt=".2f")
plt.title("Correlation Heatmap")
plt.show()

"""Average price by manufacturer"""

avg_price = df.groupby("Manufacturer")["Price"].mean().sort_values(ascending=False)
print(avg_price)

plt.figure(figsize=(10,6))
avg_price.plot(kind="bar", color="skyblue")
plt.title("Average Price by Manufacturer")
plt.ylabel("Price")
plt.show()

"""Average mileage by fuel type"""

avg_mileage = df.groupby("Fuel type")["Mileage"].mean()
print(avg_mileage)

"""Cars per year"""

cars_per_year = df["Year of manufacture"].value_counts().sort_index()
cars_per_year.plot(kind="line", figsize=(10,5), marker="o")
plt.title("Cars by Year of Manufacture")
plt.ylabel("Number of Cars")
plt.show()

"""Boxplot for outliers in Price"""

plt.figure(figsize=(8,5))
sns.boxplot(x=df["Price"])
plt.title("Outliers in Car Prices")
plt.show()

"""Detect extreme cars with very high mileage"""

outliers = df[df["Mileage"] > df["Mileage"].quantile(0.99)]
print("Cars with extremely high mileage:\n", outliers)

from scipy.stats import ttest_ind, pearsonr

!pip install ydata-profiling

from ydata_profiling import ProfileReport
profile = ProfileReport(df, title="Car Sales Data EDA Report", explorative=True)
profile.to_file("eda_report.html")

profile.to_notebook_iframe()